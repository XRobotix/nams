'use strict';

angular.module('##appName##.login', ['ngRoute'])

// Routing configuration for this module
.config(['$routeProvider',function($routeprovider){
	$routeprovider.when('/login', {
		controller: 'LoginController as l',
		templateUrl: './views/loginView.html' 
	});
	$routeprovider.when('/logout', {
		controller: 'LogoutController as l',
		templateUrl: './views/loginView.html' 
	});
}])

// Controller definition for this module
.controller('LoginController', function($rootScope,$scope,$http,$timeout,$location) {

		// Global variables for this controller
		var responseStatus = '';
		var userIp = 'not yet retrieved';
		init();

		function init(){

		};

		this.login = function(username,password,ip){
			$http.post(URL + "/user/login", {username:username, password:password, ip: ip||"N/A"})
			.then(function(r){
				log(r);
				if (r.statusText == "OK") 
				{
					$rootScope.user = r.data;
					Materialize.toast("Login successful. Welcome #" + r.data.username, 5000);
					$location.url("/");	
				}
			},function(e){
				log(e);
				Materialize.toast("ERROR! Login failed", 5000);
			});
		};

		// Get requestors IP address from httpbin.org
		function loadUserIp(){

			return $http.get('http://httpbin.org/ip')
		  	.then(function(response) {
		    	// this callback will be called asynchronously
		    	// when the response is available
		    	responseStatus = response.status;
		    	userIp = response.data.origin;
		    	log(userIp);
		    	log(JSON.stringify(response.data));

		    	// assigning userIp to scope
		    	return $scope.userip = userIp;

		    }, function(errorResponse) {
		    	// called asynchronously if an error occurs
		    	// or server returns response with an error status.
		    	responseStatus = errorResponse.status;
		    	log(JSON.stringify(errorResponse));
		    	Materialize.toast("ERROR! Failed to get IP.", 5000);
		    	// assigning userIp to scope
		    	return $scope.userip = userIp;
		    });

		};

		// // Adding small delay for IP address to be populated before loading the view
		var filterTextTimeout = $timeout(function() {
			loadUserIp();            
        }, 500); // delay 500 ms		
})
.controller('LogoutController', function($rootScope,$scope,$http,$timeout,$location) {

		init();

		function init(){
			$http.get(URL + "/user/logout")
			.then(function(r){
				if (r.statusText == "OK") 
				{
					$rootScope.user = {};
					Materialize.toast("Logout successful. Goodbey.", 5000);
					$location.url("/login");
				}
			},function(e){
				log(e);
				Materialize.toast("ERROR! Logout failed", 5000);
			});
		};

});