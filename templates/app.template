var URL = '##url##';
var prod = true;
var debug = true; 
var useLogin = true;

function log(obj) 
{ 
	if (debug) console.log(obj); 
}

var mainApp = angular.module('##appName##', ['ngRoute','naif.base64','ui.materialize','chart.js','ui.tinymce','camera','angularAudioRecorder'##models##])
.config(function($routeProvider, $locationProvider, $httpProvider,$sceProvider) { 
	$routeProvider.when('/', {
		controller: 'homeController as h',
		templateUrl: './views/homeView.html'
	});
  $sceProvider.enabled(false);
  $httpProvider.defaults.withCredentials = true;
	$routeProvider.otherwise({ redirectTo: useLogin ? '/login' : '/'}); 
})
.run(function($http,$location,$rootScope){

	init();
  setInterval(function(){
    init();
  },3000);

	function init(){
		// Materialize.toast("Changed to page ", 1000);
		$http.get(URL + '/user')
		.then(function(r){
			console.log(r);
			if (r.statusText == 'OK') 
			{
				$rootScope.user = r.data;
			}
			else
			{
				if (useLogin)
				{
					Materialize.toast("Login Failed ", 5000);
          $location.url('/login');
				}
			}
		},function(e){
			console.log(e);
			if (useLogin)
			{
        if (e.statusText == "Forbidden")
        {
          $location.url('/login');
        }
        else  
        {
          Materialize.toast("ERROR! Login Failed ", 5000);
        }
			}
		});
	};
})
.directive("menu", function() {
    return {
        templateUrl : "views/directives/menuDirective.html"
    };
})
.directive("tableView", function() {
    return {
        scope: {
            "headings" : "=headings",
            "data" : "=data",
            "model" : "=model",
            "search" : "=search",
            "page" : "=page"
      },
        templateUrl : "views/directives/tableDirective.html"
    };
})
.directive("imgView", function() {
    return {
        scope: {
            "data" : "=data"
    	},
        template : "<img ng-src='data:{{data.filetype}};base64,{{data.base64}}' />"
    };
})
.directive('fileModel', ['$parse', function ($parse) {
    return {
       restrict: 'A',
       link: function(scope, element, attrs) {
          var model = $parse(attrs.fileModel);
          var modelSetter = model.assign;
          
          element.bind('change', function(){
             scope.$apply(function(){
                modelSetter(scope, element[0].files);
             });
          });
       }
    };
}])
.service('fileUpload', ['$http', function ($http) {
    this.uploadFileToUrl = function(files, uploadUrl,cb){
       var fd = new FormData();
       for (var i = 0; i < files.length; i++) {
       	  fd.append('files', files[i]);
       };
       
       Materialize.toast("Upload started", 1000);
       $http.post(uploadUrl, fd, {
          transformRequest: angular.identity,
          headers: {'Content-Type': undefined}
       })
    
       .success(function(r){
       		Materialize.toast(r.message, 2000);
       		cb(r.files);
       })
    
       .error(function(r){
       		log(r);
       		Materialize.toast("ERROR! File upload failed", 5000);
       })
    }
}])
.service('homeService', function($rootScope,$http) {
    this.getDashData = function(model,cb) {
      $http.get(URL + "/"+model+"/dash")
      .then(function(r){
        if (r.data)
        {
              cb(r.data);
        }
        else
        {
          Materialize.toast("No Data! "+model+" getDashData failed", 5000);
              cb({});
        }
      },function(e){
        log(e);
        if (e.statusText != "Forbidden")
        {
          Materialize.toast("ERROR! "+model+" getDashData failed", 5000);
        }
      });
    }
})
.controller('homeController', function($scope, $rootScope, $location, $http, $routeParams, homeService) {

	var self = this;

  var setDashData = function(model,data)
  {
    self[model] = data;
  }

	init();

	function init(){

		self.summary = [##summaryArray##];		
    
    ##summaryServices##

	};

})